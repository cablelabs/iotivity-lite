--- library/pkparse.c
+++ library/pkparse.c
@@ -883,34 +883,37 @@ static int pk_parse_key_sec1_der( mbedtls_ecp_keypair *eck,
          * Is 'publickey' present? If not, or if we can't read it (eg because it
          * is compressed), create it from the private key.
          */
-        if( ( ret = mbedtls_asn1_get_tag( &p, end, &len,
-                        MBEDTLS_ASN1_CONTEXT_SPECIFIC | MBEDTLS_ASN1_CONSTRUCTED | 1 ) ) == 0 )
+        if( p != end )
         {
-            end2 = p + len;
-
-            if( ( ret = mbedtls_asn1_get_bitstring_null( &p, end2, &len ) ) != 0 )
-                return( MBEDTLS_ERR_PK_KEY_INVALID_FORMAT + ret );
-
-            if( p + len != end2 )
-                return( MBEDTLS_ERR_PK_KEY_INVALID_FORMAT +
-                        MBEDTLS_ERR_ASN1_LENGTH_MISMATCH );
-
-            if( ( ret = pk_get_ecpubkey( &p, end2, eck ) ) == 0 )
-                pubkey_done = 1;
-            else
+            if( ( ret = mbedtls_asn1_get_tag( &p, end, &len,
+                            MBEDTLS_ASN1_CONTEXT_SPECIFIC | MBEDTLS_ASN1_CONSTRUCTED | 1 ) ) == 0 )
             {
-                /*
-                 * The only acceptable failure mode of pk_get_ecpubkey() above
-                 * is if the point format is not recognized.
-                 */
-                if( ret != MBEDTLS_ERR_ECP_FEATURE_UNAVAILABLE )
-                    return( MBEDTLS_ERR_PK_KEY_INVALID_FORMAT );
+                end2 = p + len;
+
+                if( ( ret = mbedtls_asn1_get_bitstring_null( &p, end2, &len ) ) != 0 )
+                    return( MBEDTLS_ERR_PK_KEY_INVALID_FORMAT + ret );
+
+                if( p + len != end2 )
+                    return( MBEDTLS_ERR_PK_KEY_INVALID_FORMAT +
+                            MBEDTLS_ERR_ASN1_LENGTH_MISMATCH );
+
+                if( ( ret = pk_get_ecpubkey( &p, end2, eck ) ) == 0 )
+                    pubkey_done = 1;
+                else
+                {
+                    /*
+                     * The only acceptable failure mode of pk_get_ecpubkey() above
+                     * is if the point format is not recognized.
+                     */
+                    if( ret != MBEDTLS_ERR_ECP_FEATURE_UNAVAILABLE )
+                        return( MBEDTLS_ERR_PK_KEY_INVALID_FORMAT );
+                }
+            }
+            else if( ret != MBEDTLS_ERR_ASN1_UNEXPECTED_TAG )
+            {
+                mbedtls_ecp_keypair_free( eck );
+                return( MBEDTLS_ERR_PK_KEY_INVALID_FORMAT + ret );
             }
-        }
-        else if( ret != MBEDTLS_ERR_ASN1_UNEXPECTED_TAG )
-        {
-            mbedtls_ecp_keypair_free( eck );
-            return( MBEDTLS_ERR_PK_KEY_INVALID_FORMAT + ret );
         }
     }
 
